<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<event category="STEP" id="0">
  <actions>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">/// Character combination.
if (keyboard_check_pressed(global.key_up) &amp;&amp; obj_dataselect_cursor.datacursor_slot_index == 0 &amp;&amp; obj_dataselect_cursor.datacursor_direction == 0)
{
    if (dataslot_combo == 8)
    {
        dataslot_combo = 0;
        audio_play_sound(SFX._general_switch, global.sfx_volume, 1, 0, 0);
    }
    else
    {
        dataslot_combo += 1;
        audio_play_sound(SFX._general_switch, global.sfx_volume, 1, 0, 0);
    }
}
if (keyboard_check_pressed(global.key_down) &amp;&amp; obj_dataselect_cursor.datacursor_slot_index == 0 &amp;&amp; obj_dataselect_cursor.datacursor_direction == 0)
{
    if (dataslot_combo == 0)
    {
        dataslot_combo = 8;
        audio_play_sound(SFX._general_switch, global.sfx_volume, 1, 0, 0);
    }
    else
    {
        dataslot_combo -= 1;
        audio_play_sound(SFX._general_switch, global.sfx_volume, 1, 0, 0);
    }
}

if (dataslot_combo == 0)
{
    dataslot_character = 1;
    dataslot_cpu       = 2;
}
if (dataslot_combo == 1)
{
    dataslot_character = 1;
    dataslot_cpu       = 3;
}
if (dataslot_combo == 2)
{
    dataslot_character = 2;
    dataslot_cpu       = 1;
}
if (dataslot_combo == 3)
{
    dataslot_character = 2;
    dataslot_cpu       = 3;
}
if (dataslot_combo == 4)
{
    dataslot_character = 3;
    dataslot_cpu       = 1;
}
if (dataslot_combo == 5)
{
    dataslot_character = 3;
    dataslot_cpu       = 2;
}
if (dataslot_combo == 6)
{
    dataslot_character = 1;
    dataslot_cpu       = 0;
}
if (dataslot_combo == 7)
{
    dataslot_character = 2;
    dataslot_cpu       = 0;
}
if (dataslot_combo == 8)
{
    dataslot_character = 3;
    dataslot_cpu       = 0;
}
</argument>
      </arguments>
    </action>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">/// Selecting slot.

// Check if cursor slot id is equal to this slot's id and that the cursor is not moving.
if (obj_dataselect_cursor.datacursor_slot_index == dataslot_index &amp;&amp; obj_dataselect_cursor.datacursor_direction == 0)
{
    // Make sure to only run if robotnik is deactivated.
    if (!obj_dataselect_robotnik.active)
    {
        // If we press Action or Start, start a new game, resume it or go to the level select.
        if (keyboard_check_pressed(global.key_action) || keyboard_check_pressed(global.key_start))
        {
            // New game:
            if (dataslot_zone == 0)
            {
                if (!instance_exists(obj_fade_newgame))
                {
                    // Set the first zone of the game. You can tweak it to change depending on the main character!
                    if (dataslot_character == 1)
                    {
                        global.first_zone = rm_playground;
                    }
                    if (dataslot_character == 2)
                    {
                        global.first_zone = rm_playground;
                    }
                    if (dataslot_character = 3)
                    {
                        global.first_zone = rm_playground;
                    }

                    // Set global. variables.
                    global.player_id        = dataslot_character;
                    global.cpu_id           = dataslot_cpu;
                    global.player_lives     = 3;
                    global.player_continues = 0;
                    global.player_emeralds  = 0;
                    global.game_completed   = 0;

                    // Create the fade out.                                       
                    instance_create(0, 0, obj_fade_newgame);
                    obj_dataselect_cursor.datacursor_lock = true;
                }
            }
        }
    }
}
</argument>
      </arguments>
    </action>
  </actions>
</event>
