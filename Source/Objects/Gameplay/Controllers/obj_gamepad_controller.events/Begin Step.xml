<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<event category="STEP" id="1">
  <actions>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">/// Simulate the keyboard using our gamepad.
if (gmp_check)
{
    // Up:
    if (joystick_pov(1) == 0 || joystick_direction(1) == 104)
    {
        gmp_cup = true;
        keyboard_key_press(global.key_up);
    }
    else
    {
        if (gmp_cup)
        {
            gmp_cup = false;
            keyboard_key_release(global.key_up);
        }
    }

    // Down:
    if (joystick_pov(1) == 180 || joystick_direction(1) == 98)
    {
        gmp_cdown = true;
        keyboard_key_press(global.key_down);
    }
    else
    {
        if (gmp_cdown)
        {
            gmp_cdown = false;
            keyboard_key_release(global.key_down);
        }
    }

    // Left:
    if (joystick_pov(1) == 270 || joystick_direction(1) == 100)
    {
        gmp_cleft = true;
        keyboard_key_press(global.key_left);
    }
    else
    {
        if (gmp_cleft)
        {
            gmp_cleft = false;
            keyboard_key_release(global.key_left);
        }
    }

    // Right:
    if (joystick_pov(1) == 90 || joystick_direction(1) == 102)
    {
        gmp_cright = true;
        keyboard_key_press(global.key_right);
    }
    else
    {
        if (gmp_cright)
        {
            gmp_cright = false;
            keyboard_key_release(global.key_right);
        }
    }

    // Action:
    if (joystick_check_button(1, global.gmp_action))
    {
        gmp_caction = true;
        keyboard_key_press(global.key_action);
    }
    else
    {
        if (gmp_caction)
        {
            gmp_caction = false;
            keyboard_key_release(global.key_action);
        }
    }

    // Special:
    if (joystick_check_button(1, global.gmp_special))
    {
        gmp_cspecial = true;
        keyboard_key_press(global.key_special);
    }
    else
    {
        if (gmp_cspecial)
        {
            gmp_cspecial = false;
            keyboard_key_release(global.key_special);
        }
    }

    // Enter:
    if (joystick_check_button(1, global.gmp_start))
    {
        gmp_cstart = true;
        keyboard_key_press(global.key_start);
    }
    else
    {
        if (gmp_cstart)
        {
            gmp_cstart = false;
            keyboard_key_release(global.key_start);
        }
    }
}
</argument>
      </arguments>
    </action>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">/// Update joydll.
if (gmp_check) joy_update();
</argument>
      </arguments>
    </action>
  </actions>
</event>
